name: Aggiorna Feed Kaufland Austria
on:
  schedule:
    - cron: '15 */6 * * *'  # Ogni 6 ore (offset di 15 min)
  workflow_dispatch: 

jobs:
  update-feed-at:
    runs-on: ubuntu-latest
    steps:
      - name: Scarica codice
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Wait for other workflows to complete
        uses: softprops/turnstyle@v1
        with:
          poll-interval-seconds: 10
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      
      - name: Clear pip cache and install dependencies
        run: |
          pip cache purge
          pip install --no-cache-dir -r requirements.txt
      
      - name: Show current time and random seed info
        run: |
          echo "Current time: $(date)"
          echo "Hour: $(date +%H)"
          echo "Day: $(date +%d)"
          echo "This will be used for randomization"
      
      - name: Esegui sincronizzazione BigBuy Austria
        env:
          BIGBUY_API_KEY: ${{ secrets.BIGBUY_API_KEY }}
          COUNTRY_CODE: AT
          PYTHONUNBUFFERED: 1
        run: python bigbuy_kaufland.py
      
      - name: Check generated files and content
        run: |
          echo "=== Files generated ==="
          ls -la *.csv *.html *.json 2>/dev/null || echo "No files found"
          
          echo "=== Austria-specific files ==="
          find . -name "*_at.*" -o -name "index_at.html" -o -name "kaufland_feed_at.csv" 2>/dev/null || echo "No AT files found"
          
          echo "=== File sizes ==="
          if [ -f "kaufland_feed_at.csv" ]; then
            wc -l kaufland_feed_at.csv
            echo "First few lines of CSV:"
            head -5 kaufland_feed_at.csv
          fi
          
          if [ -f "feed_info_at.json" ]; then
            echo "JSON info content:"
            cat feed_info_at.json
          fi
      
      - name: Commit feed Austria con retry
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Pull latest changes first
          git pull origin main --rebase
          
          # Add Austria-specific files only if they exist
          files_to_add=""
          
          if [ -f "kaufland_feed_at.csv" ]; then
            lines=$(wc -l < kaufland_feed_at.csv)
            if [ "$lines" -gt 1 ]; then
              files_to_add="$files_to_add kaufland_feed_at.csv"
              echo "✅ Found kaufland_feed_at.csv with $lines lines"
            else
              echo "❌ kaufland_feed_at.csv exists but is empty"
              exit 1
            fi
          else
            echo "❌ Missing kaufland_feed_at.csv"
            exit 1
          fi
          
          if [ -f "index_at.html" ]; then
            files_to_add="$files_to_add index_at.html"
            echo "✅ Found index_at.html"
          else
            echo "❌ Missing index_at.html"
          fi
          
          if [ -f "feed_info_at.json" ]; then
            files_to_add="$files_to_add feed_info_at.json"
            echo "✅ Found feed_info_at.json"
          else
            echo "❌ Missing feed_info_at.json"
          fi
          
          if [ -n "$files_to_add" ]; then
            git add $files_to_add
            
            if git diff --cached --quiet; then
              echo "Nessuna modifica per l'Austria"
            else
              # Get data fingerprint for commit message
              fingerprint=""
              if [ -f "feed_info_at.json" ]; then
                fingerprint=$(grep -o '"data_fingerprint": "[^"]*"' feed_info_at.json | cut -d'"' -f4)
              fi
              
              # Try to commit and push with retry logic
              for i in {1..3}; do
                commit_msg="Aggiorna feed Austria $(date '+%Y-%m-%d %H:%M:%S')"
                if [ -n "$fingerprint" ]; then
                  commit_msg="$commit_msg [fingerprint: $fingerprint]"
                fi
                
                if git commit -m "$commit_msg" && git push; then
                  echo "Feed Austria aggiornato con successo!"
                  echo "📡 Available at: https://poppulseemporium.github.io/kaufland-feed/kaufland_feed_at.csv"
                  break
                else
                  echo "Push fallito, tentativo $i/3. Riprovando in 10 secondi..."
                  sleep 10
                  git pull origin main --rebase
                fi
              done
            fi
          else
            echo "❌ Nessun file Austria generato - controllare il log Python"
            exit 1
          fi
